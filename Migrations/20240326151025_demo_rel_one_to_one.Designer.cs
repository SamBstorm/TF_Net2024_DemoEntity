// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TF_Net2024_DemoEntity.Contexts;

#nullable disable

namespace TF_Net2024_DemoEntity.Migrations
{
    [DbContext(typeof(DemoContext))]
    [Migration("20240326151025_demo_rel_one_to_one")]
    partial class demo_rel_one_to_one
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TF_Net2024_DemoEntity.Entities.BankAccount", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(16)
                        .HasColumnType("CHAR");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("MONEY")
                        .HasDefaultValue(0m);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Bank_name");

                    b.Property<int>("TitularId")
                        .HasColumnType("int");

                    b.HasKey("AccountNumber");

                    b.HasIndex("TitularId")
                        .IsUnique();

                    b.ToTable("BankAccounts", (string)null);
                });

            modelBuilder.Entity("TF_Net2024_DemoEntity.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("John")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("Pseudo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PSEUDO");

                    b.HasKey("Id");

                    b.HasIndex("Pseudo")
                        .IsUnique()
                        .HasFilter("[PSEUDO] IS NOT NULL");

                    b.ToTable("PERSON");
                });

            modelBuilder.Entity("TF_Net2024_DemoEntity.Entities.BankAccount", b =>
                {
                    b.HasOne("TF_Net2024_DemoEntity.Entities.Person", "Titular")
                        .WithOne("BankAccount")
                        .HasForeignKey("TF_Net2024_DemoEntity.Entities.BankAccount", "TitularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("TF_Net2024_DemoEntity.Entities.Person", b =>
                {
                    b.Navigation("BankAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
